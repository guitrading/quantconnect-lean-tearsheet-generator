[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "lean-tearsheet-generator"
version = "0.1.0"
description = "Professional performance tearsheet generator for QuantConnect LEAN backtest results"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Gui", email = "contact@guitrading.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial :: Investment",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "pandas>=1.3.0",
    "numpy>=1.21.0",
    "plotly>=5.0.0",
    "kaleido>=0.2.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.20.0",
]

[project.scripts]
lean-tearsheet = "lean_tearsheet.cli:main"

[project.urls]
Homepage = "https://github.com/guitrading/quantconnect-lean-tearsheet-generator"
"Bug Tracker" = "https://github.com/guitrading/quantconnect-lean-tearsheet-generator/issues"
Documentation = "https://github.com/guitrading/quantconnect-lean-tearsheet-generator#readme"

[tool.black]
line-length = 79
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=lean_tearsheet --cov-report=term-missing --cov-report=html"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.coverage.run]
source = ["src/lean_tearsheet"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
